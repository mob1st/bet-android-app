insertBalanceMovement:
INSERT INTO BalanceMovement(
    description,
    amount,
    is_expense,
    date,
    category_id
) VALUES (
    :description,
    :amount,
    :is_expense,
    :date,
    :category_id
);

selectOverview:
SELECT
    bam.id bam_id, bam.description bam_description, bam.amount bam_amount,
    bam.date bam_date, bam.is_expense bam_is_expense,
    cat.id cat_id, cat.description cat_description,
    rec.id rec_id, rec.amount rec_amount, rec.is_expense rec_is_expense,
    ret.id ret_id, ret.description ret_description,
    frc.id frc_id, frc.day_of_month frc_day_of_month,
    vrc.id vrc_id,vrc.day_of_week vrc_day_of_week,
    src.id src_id, src.month_and_day src_month_and_day
FROM BalanceMovement bam
    LEFT JOIN Category cat
    ON bam.category_id = cat.id

    LEFT JOIN RecurrentCategory rec
    ON cat.id = rec.category_id

    LEFT JOIN RecurrenceType ret
    ON rec.recurrence_type_id = ret.id

    LEFT JOIN FixedRecurrentCategory frc
    ON rec.id = frc.recurrent_category_id
    AND(
        frc.day_of_month BETWEEN :first_day_of_month_start AND :first_day_of_month_end OR
        frc.day_of_month BETWEEN :second_day_of_month_start AND :second_day_of_month_end
    )

    LEFT JOIN SeasonalRecurrentCategory src
    ON rec.id = src.recurrent_category_id
    AND(
        src.month_and_day BETWEEN :first_month_and_day_start AND :first_month_and_day_end OR
        src.month_and_day BETWEEN :second_month_and_day_start AND :second_month_and_day_end
    )

    LEFT JOIN VariableRecurrentCategory vrc
    ON rec.id = vrc.recurrent_category_id
WHERE
    bam.date BETWEEN :start_date AND :end_date;

